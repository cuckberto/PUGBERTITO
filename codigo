<!DOCTYPE html>
<html lang="es">
<head>
  <meta charset="UTF-8">
  <title>MRUA Interactivo Mejorado</title>
  <script src="https://cdn.jsdelivr.net/npm/chart.js@3.9.1/dist/chart.min.js"></script>
  <style>
    /* Estilos generales */
    body {
      font-family: 'Segoe UI', Georgia, 'Times New Roman', Times, serif, Arial, sans-serif;
      margin: 0;
      padding: 0;
      background-color: #f5f7fa;
      color: #333;
    }
    header, footer {
      background-color: #2c3e50;
      color: #fff;
      padding: 10px 20px;
    }
    main {
      max-width: 960px;
      margin: auto;
      padding: 20px;
    }
    h1, h2, h3 {
      color: #2c3e50;
      margin-bottom: 10px;
    }
    section {
      margin-bottom: 30px;
    }
    p, ul, dl {
      margin: 0 0 15px;
      line-height: 1.5;
    }
    ul {
      padding-left: 20px;
    }
    dl dt {
      font-weight: bold;
    }
    dl dd {
      margin-left: 20px;
    }
    form {
      display: grid;
      grid-template-columns: repeat(auto-fit, minmax(150px, 1fr));
      gap: 10px;
      margin-top: 10px;
    }
    form label {
      display: flex;
      flex-direction: column;
      font-size: .9em;
    }
    form input {
      padding: 5px;
      font-size: 1em;
      border: 1px solid #bbb;
      border-radius: 4px;
    }
    form input[readonly] {
      background-color: #e9ecef;
    }
    .charts {
      display: grid;
      grid-template-columns: 1fr;
      gap: 20px;
    }
    @media (min-width: 700px) {
      .charts {
        grid-template-columns: 1fr 1fr;
      }
    }
    canvas {
      width: 100%;
      height: 300px;
      background-color: #fff;
      border: 1px solid #ccc;
      border-radius: 4px;
    }
    pre {
      background: #eaf1f4;
      padding: 10px;
      border-left: 4px solid #3498db;
      border-radius: 4px;
      overflow-x: auto;
      font-size: .9em;
    }

    /* Portada */
    #portada {
      display: flex;
      flex-direction: column;
      align-items: center;
      justify-content: center;
      text-align: center;
      min-height: 100vh;
      background-color: #fff;
      padding: 40px 20px;
    }
    #portada .logo {
      max-width: 150px;
      margin: 20px 0;
    }
    #portada h1 {
      font-size: 2em;
      margin-bottom: 0.5em;
      color: #2c3e50;
    }
    #portada h2 {
      font-size: 1.5em;
      margin: 0.3em 0;
      color: #34495e;
    }
    #portada h3 {
      margin-top: 1em;
      font-size: 1.2em;
      color: #34495e;
    }
    #portada ul {
      list-style-type: none;
      padding: 0;
      margin: 0.5em 0 1em;
    }
    #portada ul li {
      font-size: 1em;
      margin: 0.2em 0;
    }
    #portada p.fecha {
      margin-top: 1.5em;
      font-style: italic;
      color: #7f8c8d;
    }

    /* Gato ASCII */
    .ascii-cat {
      color: #000;
      font-family: monospace;
      text-align: center;
    }
  </style>
</head>
<body>

  <!-- Portada -->
  <section id="portada">
    <h1>Nombre de la Institución</h1>
    <img src="isima.jpg" alt="Logo de la institución" class="logo">
    <h2>Asignatura: calculo diferencial </h2>
    <h2>Proyecto: MRUA Interactivo Mejorado</h2>
    <h3>Participantes:</h3>
    <ul>
      <li>Campis Cornejo Roberto</li>
      <li>Miranda Lopez Uriel</li>
      <li>Uribe Hernandez Diego Yael </li>
    </ul>
    <p class="fecha">Fecha de entrega: 16 julio 2025</p>
  </section>

  <!-- Encabezado del contenido principal -->
  <header>
    <h1>Movimiento Rectilíneo Uniformemente Acelerado (MRUA)</h1>
  </header>

  <main>
    <section>
      <h2>Introducción</h2>
      <p>
        El Movimiento Rectilíneo Uniformemente Acelerado (MRUA) es uno de los modelos
        cinemáticos más básicos y fundamentales en física, utilizado para describir
        el comportamiento de cuerpos que se desplazan en línea recta bajo aceleración constante.
      </p>
    </section>

    <section>
      <h2>¿Qué es el MRUA?</h2>
      <p>Movimiento en línea recta con aceleración constante, donde:</p>
      <ul>
        <li>Aceleración constante</li>
        <li>Trayectoria recta</li>
        <li>Velocidad cambia linealmente</li>
        <li>Desplazamiento ∝ t²</li>
      </ul>
    </section>

    <section>
      <h2>Fórmulas Fundamentales</h2>
      <dl>
        <dt>v = v₀ + a·t</dt>
        <dd>Velocidad en función del tiempo</dd>
        <dt>x = x₀ + v₀·t + ½·a·t²</dt>
        <dd>Desplazamiento en función del tiempo</dd>
        <dt>v² = v₀² + 2·a·(x–x₀)</dt>
        <dd>Velocidad en función del desplazamiento</dd>
        <dt>(x–x₀) = ((v + v₀) / 2)·t</dt>
        <dd>Velocidad media</dd>
      </dl>
    </section>

    <section>
      <h2>Aplicaciones</h2>
      <ul>
        <li>Automóviles acelerando o frenando en línea recta</li>
        <li>Caída libre (sin fricción)</li>
        <li>Trenes arrancando o deteniéndose</li>
        <li>Lanzamientos verticales</li>
      </ul>
    </section>

    <section>
      <h2>Ejemplo: Carro de 2 000 kg en pendiente de 20°</h2>
      <p>
        F = m·g·sin(20°) = 2000·9.81·sin(20°) ≈ 6 713.6 N<br>
        a = F / m ≈ 3.36 m/s²
      </p>
    </section>

    <section>
      <h2>Define tu simulación</h2>
      <form id="controls">
        <label>S₀ (m)
          <input type="number" id="s0" value="0" step="0.1" oninput="updateAll()">
        </label>
        <label>v₀ (m/s)
          <input type="number" id="v0" value="0" step="0.1" oninput="updateAll()">
        </label>
        <label>m (kg)
          <input type="number" id="mass" value="2000" step="1" oninput="updateAll()">
        </label>
        <label>α (°)
          <input type="number" id="angle" value="20" step="0.1" oninput="updateAll()">
        </label>
        <label>a (m/s²)
          <input type="number" id="a" readonly>
        </label>
        <label>tFinal (s)
          <input type="number" id="tFinal" value="10" step="0.1" oninput="updateAll()">
        </label>
      </form>
    </section>

    <section class="charts">
      <div>
        <h2>Posición vs Tiempo</h2>
        <canvas id="chartPos"></canvas>
      </div>
      <div>
        <h2>Velocidad vs Tiempo</h2>
        <canvas id="chartVel"></canvas>
      </div>
      <div style="grid-column: 1/-1">
        <h2>Aceleración vs Tiempo</h2>
        <canvas id="chartAcc"></canvas>
      </div>
    </section>

    <section>
      <h2>Conclusión</h2>
      <p>
        El MRUA es fundamental para analizar movimientos con aceleración constante.
        Aplicarlo al caso del carro en pendiente demuestra cómo la gravedad y la
        inclinación afectan la dinámica.
      </p>
    </section>

    <section>
      <h2>Código Python para generar las gráficas</h2>
      <pre><code>import numpy as np
import matplotlib.pyplot as plt

s0 = 0  # posición inicial (m)
v0 = 0  # velocidad inicial (m/s)
m = 2000  # masa (kg)
theta = 20  # ángulo (°)
g = 9.81  # gravedad (m/s²)
a = g * np.sin(np.deg2rad(theta))

t_final = 10
num_puntos = 500
t = np.linspace(0, t_final, num_puntos)

S = s0 + v0 * t + 0.5 * a * t**2
V = v0 + a * t
A = a * np.ones_like(t)

plt.figure(figsize=(10, 6))
plt.subplot(3, 1, 1)
plt.plot(t, S, label='s(t)')
plt.title('Posición vs Tiempo')
plt.xlabel('t (s)')
plt.ylabel('s (m)')
plt.grid()

plt.subplot(3, 1, 2)
plt.plot(t, V, label='v(t)', color='orange')
plt.title('Velocidad vs Tiempo')
plt.xlabel('t (s)')
plt.ylabel('v (m/s)')
plt.grid()

plt.subplot(3, 1, 3)
plt.plot(t, A, label='a constante', color='green')
plt.title('Aceleración vs Tiempo')
plt.xlabel('t (s)')
plt.ylabel('a (m/s²)')
plt.grid()

plt.tight_layout()
plt.show()</code></pre>
    </section>
  </main>

  <footer>
    <p>Proyecto de cálculo – MRUA Interactivo</p>
    <div class="ascii-cat">
      <pre>
( o.o )
> > <
      </pre>
    </div>
  </footer>

  <script>
    // Crear y configurar los gráficos
    const chartPos = new Chart(document.getElementById('chartPos'), {
      type: 'line',
      data: { labels: [], datasets: [{ label: 's(t) [m]', data: [], borderColor: 'blue', fill: false, tension: 0.2 }] },
      options: { scales: { x: { title: { display: true, text: 'Tiempo (s)' } }, y: { title: { display: true, text: 'Posición (m)' } } } }
    });
    const chartVel = new Chart(document.getElementById('chartVel'), {
      type: 'line',
      data: { labels: [], datasets: [{ label: 'v(t) [m/s]', data: [], borderColor: 'orange', fill: false, tension: 0.2 }] },
      options: { scales: { x: { title: { display: true, text: 'Tiempo (s)' } }, y: { title: { display: true, text: 'Velocidad (m/s)' } } } }
    });
    const chartAcc = new Chart(document.getElementById('chartAcc'), {
      type: 'line',
      data: { labels: [], datasets: [{ label: 'a(t) [m/s²]', data: [], borderColor: 'green', fill: false, tension: 0.2 }] },
      options: { scales: { x: { title: { display: true, text: 'Tiempo (s)' } }, y: { title: { display: true, text: 'Aceleración (m/s²)' } } } }
    });

    // Función para actualizar datos
    function updateAll() {
      const s0 = parseFloat(document.getElementById('s0').value) || 0;
      const v0 = parseFloat(document.getElementById('v0').value) || 0;
      const angle = (parseFloat(document.getElementById('angle').value) || 0) * Math.PI / 180;
      const aVal = 9.81 * Math.sin(angle);
      document.getElementById('a').value = aVal.toFixed(3);

      const tFinal = parseFloat(document.getElementById('tFinal').value) || 0;
      const nPts = 200;

      const labels = [];
      const datas = [];
      const dataV = [];
      const dataA = [];

      for (let i = 0; i <= nPts; i++) {
        const t = i * tFinal / nPts;
        labels.push(t.toFixed(2));
        datas.push((s0 + v0 * t + 0.5 * aVal * t * t).toFixed(3));
        dataV.push((v0 + aVal * t).toFixed(3));
        dataA.push(aVal.toFixed(3));
      }

      chartPos.data.labels = labels;
      chartPos.data.datasets[0].data = datas;
      chartPos.update();

      chartVel.data.labels = labels;
      chartVel.data.datasets[0].data = dataV;
      chartVel.update();

      chartAcc.data.labels = labels;
      chartAcc.data.datasets[0].data = dataA;
      chartAcc.update();
    }

    // Llamada inicial
    updateAll();
  </script>

</body>
</html>
